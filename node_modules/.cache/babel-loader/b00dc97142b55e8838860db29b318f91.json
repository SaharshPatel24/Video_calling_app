{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahar\\\\OneDrive\\\\Desktop\\\\Galaxy Staffing\\\\Video-Call CLient\\\\video-group-meeting\\\\client\\\\src\\\\components\\\\Room\\\\Room.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport VideoCard from '../Video/VideoCard';\nimport BottomBar from '../BottomBar/BottomBar';\nimport Chat from '../Chat/Chat';\n\nconst Room = props => {\n  const currentUser = sessionStorage.getItem('user');\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: {\n      video: true,\n      audio: true\n    }\n  });\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [displayChat, setDisplayChat] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  const [showVideoDevices, setShowVideoDevices] = useState(false);\n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  const roomId = props.match.params.roomId;\n  useEffect(() => {\n    // Get Video Devices\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const filtered = devices.filter(device => device.kind === 'videoinput');\n      setVideoDevices(filtered);\n    }); // Set Back Button Event\n\n    window.addEventListener('popstate', goToBack); // Connect Camera & Mic\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideoRef.current.srcObject = stream;\n      userStream.current = stream;\n      socket.emit('BE-join-room', {\n        roomId,\n        userName: currentUser\n      });\n      socket.on('FE-user-join', users => {\n        // all users\n        const peers = [];\n        users.forEach(_ref => {\n          let {\n            userId,\n            info\n          } = _ref;\n          let {\n            userName,\n            video,\n            audio\n          } = info;\n\n          if (userName !== currentUser) {\n            const peer = createPeer(userId, socket.id, stream);\n            peer.userName = userName;\n            peer.peerID = userId;\n            peersRef.current.push({\n              peerID: userId,\n              peer,\n              userName\n            });\n            peers.push(peer);\n            setUserVideoAudio(preList => {\n              return { ...preList,\n                [peer.userName]: {\n                  video,\n                  audio\n                }\n              };\n            });\n          }\n        });\n        setPeers(peers);\n      });\n      socket.on('FE-receive-call', _ref2 => {\n        let {\n          signal,\n          from,\n          info\n        } = _ref2;\n        let {\n          userName,\n          video,\n          audio\n        } = info;\n        const peerIdx = findPeer(from);\n\n        if (!peerIdx) {\n          const peer = addPeer(signal, from, stream);\n          peer.userName = userName;\n          peersRef.current.push({\n            peerID: from,\n            peer,\n            userName: userName\n          });\n          setPeers(users => {\n            return [...users, peer];\n          });\n          setUserVideoAudio(preList => {\n            return { ...preList,\n              [peer.userName]: {\n                video,\n                audio\n              }\n            };\n          });\n        }\n      });\n      socket.on('FE-call-accepted', _ref3 => {\n        let {\n          signal,\n          answerId\n        } = _ref3;\n        const peerIdx = findPeer(answerId);\n        peerIdx.peer.signal(signal);\n      });\n      socket.on('FE-user-leave', _ref4 => {\n        let {\n          userId,\n          userName\n        } = _ref4;\n        const peerIdx = findPeer(userId);\n        peerIdx.peer.destroy();\n        setPeers(users => {\n          users = users.filter(user => user.peerID !== peerIdx.peer.peerID);\n          return [...users];\n        });\n        peersRef.current = peersRef.current.filter(_ref5 => {\n          let {\n            peerID\n          } = _ref5;\n          return peerID !== userId;\n        });\n      });\n    });\n    socket.on('FE-toggle-camera', _ref6 => {\n      let {\n        userId,\n        switchTarget\n      } = _ref6;\n      const peerIdx = findPeer(userId);\n      setUserVideoAudio(preList => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n        if (switchTarget === 'video') video = !video;else audio = !audio;\n        return { ...preList,\n          [peerIdx.userName]: {\n            video,\n            audio\n          }\n        };\n      });\n    });\n    return () => {\n      socket.disconnect();\n    }; // eslint-disable-next-line\n  }, []);\n\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-call-user', {\n        userToCall: userId,\n        from: caller,\n        signal\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('BE-accept-call', {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on('disconnect', () => {\n      peer.destroy();\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find(p => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return /*#__PURE__*/React.createElement(VideoBox, {\n      className: `width-peer${peers.length > 8 ? '' : peers.length}`,\n      onClick: expandScreen,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, writeUserName(peer.userName), /*#__PURE__*/React.createElement(FaIcon, {\n      className: \"fas fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VideoCard, {\n      key: index,\n      peer: peer,\n      number: arr.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return /*#__PURE__*/React.createElement(UserName, {\n          key: userName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 16\n          }\n        }, userName);\n      }\n    }\n  } // Open Chat\n\n\n  const clickChat = e => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  }; // BackButton\n\n\n  const goToBack = e => {\n    e.preventDefault();\n    socket.emit('BE-leave-room', {\n      roomId,\n      leaver: currentUser\n    });\n    sessionStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  const toggleCameraAudio = e => {\n    const target = e.target.getAttribute('data-switch');\n    setUserVideoAudio(preList => {\n      let videoSwitch = preList['localUser'].video;\n      let audioSwitch = preList['localUser'].audio;\n\n      if (target === 'video') {\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return { ...preList,\n        localUser: {\n          video: videoSwitch,\n          audio: audioSwitch\n        }\n      };\n    });\n    socket.emit('BE-toggle-camera-audio', {\n      roomId,\n      switchTarget: target\n    });\n  };\n\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices.getDisplayMedia({\n        cursor: true\n      }).then(stream => {\n        const screenTrack = stream.getTracks()[0];\n        peersRef.current.forEach(_ref7 => {\n          let {\n            peer\n          } = _ref7;\n          // replaceTrack (oldTrack, newTrack, oldStream);\n          peer.replaceTrack(peer.streams[0].getTracks().find(track => track.kind === 'video'), screenTrack, userStream.current);\n        }); // Listen click end\n\n        screenTrack.onended = () => {\n          peersRef.current.forEach(_ref8 => {\n            let {\n              peer\n            } = _ref8;\n            peer.replaceTrack(screenTrack, peer.streams[0].getTracks().find(track => track.kind === 'video'), userStream.current);\n          });\n          userVideoRef.current.srcObject = userStream.current;\n          setScreenShare(false);\n        };\n\n        userVideoRef.current.srcObject = stream;\n        screenTrackRef.current = screenTrack;\n        setScreenShare(true);\n      });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n\n  const expandScreen = e => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  const clickBackground = () => {\n    if (!showVideoDevices) return;\n    setShowVideoDevices(false);\n  };\n\n  const clickCameraDevice = event => {\n    if (event && event.target && event.target.dataset && event.target.dataset.value) {\n      const deviceId = event.target.dataset.value;\n      const enabledAudio = userVideoRef.current.srcObject.getAudioTracks()[0].enabled;\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId\n        },\n        audio: enabledAudio\n      }).then(stream => {\n        const newStreamTrack = stream.getTracks().find(track => track.kind === 'video');\n        const oldStreamTrack = userStream.current.getTracks().find(track => track.kind === 'video');\n        userStream.current.removeTrack(oldStreamTrack);\n        userStream.current.addTrack(newStreamTrack);\n        peersRef.current.forEach(_ref9 => {\n          let {\n            peer\n          } = _ref9;\n          // replaceTrack (oldTrack, newTrack, oldStream);\n          peer.replaceTrack(oldStreamTrack, newStreamTrack, userStream.current);\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RoomContainer, {\n    onClick: clickBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VideoAndBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VideoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoBox, {\n    className: `width-peer${peers.length > 8 ? '' : peers.length}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, userVideoAudio['localUser'].video ? null : /*#__PURE__*/React.createElement(UserName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, currentUser), /*#__PURE__*/React.createElement(FaIcon, {\n    className: \"fas fa-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyVideo, {\n    onClick: expandScreen,\n    ref: userVideoRef,\n    muted: true,\n    autoPlay: true,\n    playInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  })), peers && peers.map((peer, index, arr) => createUserVideo(peer, index, arr))), /*#__PURE__*/React.createElement(BottomBar, {\n    clickScreenSharing: clickScreenSharing,\n    clickChat: clickChat,\n    clickCameraDevice: clickCameraDevice,\n    goToBack: goToBack,\n    toggleCameraAudio: toggleCameraAudio,\n    userVideoAudio: userVideoAudio['localUser'],\n    screenShare: screenShare,\n    videoDevices: videoDevices,\n    showVideoDevices: showVideoDevices,\n    setShowVideoDevices: setShowVideoDevices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Chat, {\n    display: displayChat,\n    roomId: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n`;\nconst VideoContainer = styled.div`\n  max-width: 100%;\n  height: 92%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px;\n  box-sizing: border-box;\n  gap: 10px;\n`;\nconst VideoAndBarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\nconst MyVideo = styled.video``;\nconst VideoBox = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  :hover {\n    > i {\n      display: block;\n    }\n  }\n`;\nconst UserName = styled.div`\n  position: absolute;\n  font-size: calc(20px + 5vmin);\n  z-index: 1;\n`;\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\nexport default Room;","map":{"version":3,"names":["React","useState","useEffect","useRef","Peer","styled","socket","VideoCard","BottomBar","Chat","Room","props","currentUser","sessionStorage","getItem","peers","setPeers","userVideoAudio","setUserVideoAudio","localUser","video","audio","videoDevices","setVideoDevices","displayChat","setDisplayChat","screenShare","setScreenShare","showVideoDevices","setShowVideoDevices","peersRef","userVideoRef","screenTrackRef","userStream","roomId","match","params","navigator","mediaDevices","enumerateDevices","then","devices","filtered","filter","device","kind","window","addEventListener","goToBack","getUserMedia","stream","current","srcObject","emit","userName","on","users","forEach","userId","info","peer","createPeer","id","peerID","push","preList","signal","from","peerIdx","findPeer","addPeer","answerId","destroy","user","switchTarget","disconnect","caller","initiator","trickle","userToCall","incomingSignal","callerId","to","find","p","createUserVideo","index","arr","length","expandScreen","writeUserName","hasOwnProperty","clickChat","e","stopPropagation","preventDefault","leaver","removeItem","location","href","toggleCameraAudio","target","getAttribute","videoSwitch","audioSwitch","userVideoTrack","getVideoTracks","enabled","userAudioTrack","getAudioTracks","clickScreenSharing","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","track","onended","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","clickBackground","clickCameraDevice","event","dataset","value","deviceId","enabledAudio","newStreamTrack","oldStreamTrack","removeTrack","addTrack","map","RoomContainer","div","VideoContainer","VideoAndBarContainer","MyVideo","VideoBox","UserName","FaIcon","i"],"sources":["C:/Users/sahar/OneDrive/Desktop/Galaxy Staffing/Video-Call CLient/video-group-meeting/client/src/components/Room/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Peer from 'simple-peer';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\nimport VideoCard from '../Video/VideoCard';\r\nimport BottomBar from '../BottomBar/BottomBar';\r\nimport Chat from '../Chat/Chat';\r\n\r\nconst Room = (props) => {\r\n  const currentUser = sessionStorage.getItem('user');\r\n  const [peers, setPeers] = useState([]);\r\n  const [userVideoAudio, setUserVideoAudio] = useState({\r\n    localUser: { video: true, audio: true },\r\n  });\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [displayChat, setDisplayChat] = useState(false);\r\n  const [screenShare, setScreenShare] = useState(false);\r\n  const [showVideoDevices, setShowVideoDevices] = useState(false);\r\n  const peersRef = useRef([]);\r\n  const userVideoRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const userStream = useRef();\r\n  const roomId = props.match.params.roomId;\r\n\r\n  useEffect(() => {\r\n    // Get Video Devices\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const filtered = devices.filter((device) => device.kind === 'videoinput');\r\n      setVideoDevices(filtered);\r\n    });\r\n\r\n    // Set Back Button Event\r\n    window.addEventListener('popstate', goToBack);\r\n\r\n    // Connect Camera & Mic\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        userVideoRef.current.srcObject = stream;\r\n        userStream.current = stream;\r\n\r\n        socket.emit('BE-join-room', { roomId, userName: currentUser });\r\n        socket.on('FE-user-join', (users) => {\r\n          // all users\r\n          const peers = [];\r\n          users.forEach(({ userId, info }) => {\r\n            let { userName, video, audio } = info;\r\n\r\n            if (userName !== currentUser) {\r\n              const peer = createPeer(userId, socket.id, stream);\r\n\r\n              peer.userName = userName;\r\n              peer.peerID = userId;\r\n\r\n              peersRef.current.push({\r\n                peerID: userId,\r\n                peer,\r\n                userName,\r\n              });\r\n              peers.push(peer);\r\n\r\n              setUserVideoAudio((preList) => {\r\n                return {\r\n                  ...preList,\r\n                  [peer.userName]: { video, audio },\r\n                };\r\n              });\r\n            }\r\n          });\r\n\r\n          setPeers(peers);\r\n        });\r\n\r\n        socket.on('FE-receive-call', ({ signal, from, info }) => {\r\n          let { userName, video, audio } = info;\r\n          const peerIdx = findPeer(from);\r\n\r\n          if (!peerIdx) {\r\n            const peer = addPeer(signal, from, stream);\r\n\r\n            peer.userName = userName;\r\n\r\n            peersRef.current.push({\r\n              peerID: from,\r\n              peer,\r\n              userName: userName,\r\n            });\r\n            setPeers((users) => {\r\n              return [...users, peer];\r\n            });\r\n            setUserVideoAudio((preList) => {\r\n              return {\r\n                ...preList,\r\n                [peer.userName]: { video, audio },\r\n              };\r\n            });\r\n          }\r\n        });\r\n\r\n        socket.on('FE-call-accepted', ({ signal, answerId }) => {\r\n          const peerIdx = findPeer(answerId);\r\n          peerIdx.peer.signal(signal);\r\n        });\r\n\r\n        socket.on('FE-user-leave', ({ userId, userName }) => {\r\n          const peerIdx = findPeer(userId);\r\n          peerIdx.peer.destroy();\r\n          setPeers((users) => {\r\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\r\n            return [...users];\r\n          });\r\n          peersRef.current = peersRef.current.filter(({ peerID }) => peerID !== userId );\r\n        });\r\n      });\r\n\r\n    socket.on('FE-toggle-camera', ({ userId, switchTarget }) => {\r\n      const peerIdx = findPeer(userId);\r\n\r\n      setUserVideoAudio((preList) => {\r\n        let video = preList[peerIdx.userName].video;\r\n        let audio = preList[peerIdx.userName].audio;\r\n\r\n        if (switchTarget === 'video') video = !video;\r\n        else audio = !audio;\r\n\r\n        return {\r\n          ...preList,\r\n          [peerIdx.userName]: { video, audio },\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function createPeer(userId, caller, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('BE-call-user', {\r\n        userToCall: userId,\r\n        from: caller,\r\n        signal,\r\n      });\r\n    });\r\n    peer.on('disconnect', () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerId, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('BE-accept-call', { signal, to: callerId });\r\n    });\r\n\r\n    peer.on('disconnect', () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  function findPeer(id) {\r\n    return peersRef.current.find((p) => p.peerID === id);\r\n  }\r\n\r\n  function createUserVideo(peer, index, arr) {\r\n    return (\r\n      <VideoBox\r\n        className={`width-peer${peers.length > 8 ? '' : peers.length}`}\r\n        onClick={expandScreen}\r\n        key={index}\r\n      >\r\n        {writeUserName(peer.userName)}\r\n        <FaIcon className='fas fa-expand' />\r\n        <VideoCard key={index} peer={peer} number={arr.length} />\r\n      </VideoBox>\r\n    );\r\n  }\r\n\r\n  function writeUserName(userName, index) {\r\n    if (userVideoAudio.hasOwnProperty(userName)) {\r\n      if (!userVideoAudio[userName].video) {\r\n        return <UserName key={userName}>{userName}</UserName>;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Open Chat\r\n  const clickChat = (e) => {\r\n    e.stopPropagation();\r\n    setDisplayChat(!displayChat);\r\n  };\r\n\r\n  // BackButton\r\n  const goToBack = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('BE-leave-room', { roomId, leaver: currentUser });\r\n    sessionStorage.removeItem('user');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const toggleCameraAudio = (e) => {\r\n    const target = e.target.getAttribute('data-switch');\r\n\r\n    setUserVideoAudio((preList) => {\r\n      let videoSwitch = preList['localUser'].video;\r\n      let audioSwitch = preList['localUser'].audio;\r\n\r\n      if (target === 'video') {\r\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\r\n        videoSwitch = !videoSwitch;\r\n        userVideoTrack.enabled = videoSwitch;\r\n      } else {\r\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\r\n        audioSwitch = !audioSwitch;\r\n\r\n        if (userAudioTrack) {\r\n          userAudioTrack.enabled = audioSwitch;\r\n        } else {\r\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...preList,\r\n        localUser: { video: videoSwitch, audio: audioSwitch },\r\n      };\r\n    });\r\n\r\n    socket.emit('BE-toggle-camera-audio', { roomId, switchTarget: target });\r\n  };\r\n\r\n  const clickScreenSharing = () => {\r\n    if (!screenShare) {\r\n      navigator.mediaDevices\r\n        .getDisplayMedia({ cursor: true })\r\n        .then((stream) => {\r\n          const screenTrack = stream.getTracks()[0];\r\n\r\n          peersRef.current.forEach(({ peer }) => {\r\n            // replaceTrack (oldTrack, newTrack, oldStream);\r\n            peer.replaceTrack(\r\n              peer.streams[0]\r\n                .getTracks()\r\n                .find((track) => track.kind === 'video'),\r\n              screenTrack,\r\n              userStream.current\r\n            );\r\n          });\r\n\r\n          // Listen click end\r\n          screenTrack.onended = () => {\r\n            peersRef.current.forEach(({ peer }) => {\r\n              peer.replaceTrack(\r\n                screenTrack,\r\n                peer.streams[0]\r\n                  .getTracks()\r\n                  .find((track) => track.kind === 'video'),\r\n                userStream.current\r\n              );\r\n            });\r\n            userVideoRef.current.srcObject = userStream.current;\r\n            setScreenShare(false);\r\n          };\r\n\r\n          userVideoRef.current.srcObject = stream;\r\n          screenTrackRef.current = screenTrack;\r\n          setScreenShare(true);\r\n        });\r\n    } else {\r\n      screenTrackRef.current.onended();\r\n    }\r\n  };\r\n\r\n  const expandScreen = (e) => {\r\n    const elem = e.target;\r\n\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  const clickBackground = () => {\r\n    if (!showVideoDevices) return;\r\n\r\n    setShowVideoDevices(false);\r\n  };\r\n\r\n  const clickCameraDevice = (event) => {\r\n    if (event && event.target && event.target.dataset && event.target.dataset.value) {\r\n      const deviceId = event.target.dataset.value;\r\n      const enabledAudio = userVideoRef.current.srcObject.getAudioTracks()[0].enabled;\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: { deviceId }, audio: enabledAudio })\r\n        .then((stream) => {\r\n          const newStreamTrack = stream.getTracks().find((track) => track.kind === 'video');\r\n          const oldStreamTrack = userStream.current\r\n            .getTracks()\r\n            .find((track) => track.kind === 'video');\r\n\r\n          userStream.current.removeTrack(oldStreamTrack);\r\n          userStream.current.addTrack(newStreamTrack);\r\n\r\n          peersRef.current.forEach(({ peer }) => {\r\n            // replaceTrack (oldTrack, newTrack, oldStream);\r\n            peer.replaceTrack(\r\n              oldStreamTrack,\r\n              newStreamTrack,\r\n              userStream.current\r\n            );\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RoomContainer onClick={clickBackground}>\r\n      <VideoAndBarContainer>\r\n        <VideoContainer>\r\n          {/* Current User Video */}\r\n          <VideoBox\r\n            className={`width-peer${peers.length > 8 ? '' : peers.length}`}\r\n          >\r\n            {userVideoAudio['localUser'].video ? null : (\r\n              <UserName>{currentUser}</UserName>\r\n            )}\r\n            <FaIcon className='fas fa-expand' />\r\n            <MyVideo\r\n              onClick={expandScreen}\r\n              ref={userVideoRef}\r\n              muted\r\n              autoPlay\r\n              playInline\r\n            ></MyVideo>\r\n          </VideoBox>\r\n          {/* Joined User Vidoe */}\r\n          {peers &&\r\n            peers.map((peer, index, arr) => createUserVideo(peer, index, arr))}\r\n        </VideoContainer>\r\n        <BottomBar\r\n          clickScreenSharing={clickScreenSharing}\r\n          clickChat={clickChat}\r\n          clickCameraDevice={clickCameraDevice}\r\n          goToBack={goToBack}\r\n          toggleCameraAudio={toggleCameraAudio}\r\n          userVideoAudio={userVideoAudio['localUser']}\r\n          screenShare={screenShare}\r\n          videoDevices={videoDevices}\r\n          showVideoDevices={showVideoDevices}\r\n          setShowVideoDevices={setShowVideoDevices}\r\n        />\r\n      </VideoAndBarContainer>\r\n      <Chat display={displayChat} roomId={roomId} />\r\n    </RoomContainer>\r\n  );\r\n};\r\n\r\nconst RoomContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-height: 100vh;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  max-width: 100%;\r\n  height: 92%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n`;\r\n\r\nconst VideoAndBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst MyVideo = styled.video``;\r\n\r\nconst VideoBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > video {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  :hover {\r\n    > i {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  position: absolute;\r\n  font-size: calc(20px + 5vmin);\r\n  z-index: 1;\r\n`;\r\n\r\nconst FaIcon = styled.i`\r\n  display: none;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n`;\r\n\r\nexport default Room;"],"mappings":"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"},"metadata":{},"sourceType":"module"}